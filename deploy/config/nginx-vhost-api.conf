limit_req_zone $binary_remote_addr zone=api_limit:10m rate=3r/s;

log_format timed_combined '$remote_addr - $remote_user [$time_local] '
            '"$request" $status $body_bytes_sent '
            '"$http_referer" "$http_user_agent" '
            '$request_time $upstream_response_time';

server {
	server_name api.slickcomment.com;
	root /home/huy/api/current/apps/api/public;
	index index.php index.html;

	listen 443 ssl;

	ssl_certificate /etc/nginx/certs/cert.pem;
	ssl_certificate_key /etc/nginx/certs/key.pem;

        location /api {
            limit_req zone=api_limit burst=5 nodelay;
            limit_req_status 444;

            try_files $uri @rewriteapp;
        }

        location / {
            try_files $uri @rewriteapp;
        }

        location @rewriteapp {
            rewrite ^(.*)$ /index.php/$1 last;
        }

	location ~ ^/(index|config)\.php(/|$) {
	    fastcgi_pass unix:/run/php/php8.0-fpm-huy.sock;
	    fastcgi_split_path_info ^(.+\.php)(/.*)$;
	    include fastcgi_params;

	    fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
	    fastcgi_param DOCUMENT_ROOT $realpath_root;

	    # Prevents URIs that include the front controller. This will 404:
	    # http://domain.tld/index.php/some-path
	    # Remove the internal directive to allow URIs like this
	    internal;
	}

	# return 404 for all other php files not matching the front controller
	# this prevents access to other php files you don't want to be accessible.
	location ~ \.php$ {
	    return 404;
	}

	error_log /var/log/nginx/api_error.log;
	access_log /var/log/nginx/api_access.log timed_combined;
}

server {
	if ($host = api.slickcomment.com) {
		return 301 https://$host$request_uri;
	}

	listen 80;
	listen [::]:80;

	server_name api.slickcomment.com;
	return 404;
}
